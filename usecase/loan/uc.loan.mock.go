// Code generated by MockGen. DO NOT EDIT.
// Source: usecase/loan/uc.loan.dep.go

// Package loan is a generated GoMock package.
package loan

import (
	admin "amartha/model/admin"
	borrower "amartha/model/borrower"
	investor "amartha/model/investor"
	loan "amartha/model/loan"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRepoLoanInterface is a mock of RepoLoanInterface interface.
type MockRepoLoanInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRepoLoanInterfaceMockRecorder
}

// MockRepoLoanInterfaceMockRecorder is the mock recorder for MockRepoLoanInterface.
type MockRepoLoanInterfaceMockRecorder struct {
	mock *MockRepoLoanInterface
}

// NewMockRepoLoanInterface creates a new mock instance.
func NewMockRepoLoanInterface(ctrl *gomock.Controller) *MockRepoLoanInterface {
	mock := &MockRepoLoanInterface{ctrl: ctrl}
	mock.recorder = &MockRepoLoanInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepoLoanInterface) EXPECT() *MockRepoLoanInterfaceMockRecorder {
	return m.recorder
}

// GetAdmin mocks base method.
func (m *MockRepoLoanInterface) GetAdmin(ctx context.Context, email string) (*admin.Admin, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAdmin", ctx, email)
	ret0, _ := ret[0].(*admin.Admin)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAdmin indicates an expected call of GetAdmin.
func (mr *MockRepoLoanInterfaceMockRecorder) GetAdmin(ctx, email interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAdmin", reflect.TypeOf((*MockRepoLoanInterface)(nil).GetAdmin), ctx, email)
}

// GetAllInvestorEmail mocks base method.
func (m *MockRepoLoanInterface) GetAllInvestorEmail(ctx context.Context, loanID int64) ([]*investor.Investor, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllInvestorEmail", ctx, loanID)
	ret0, _ := ret[0].([]*investor.Investor)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllInvestorEmail indicates an expected call of GetAllInvestorEmail.
func (mr *MockRepoLoanInterfaceMockRecorder) GetAllInvestorEmail(ctx, loanID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllInvestorEmail", reflect.TypeOf((*MockRepoLoanInterface)(nil).GetAllInvestorEmail), ctx, loanID)
}

// GetBorrower mocks base method.
func (m *MockRepoLoanInterface) GetBorrower(ctx context.Context, borrowerID int64) (*borrower.Borrower, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBorrower", ctx, borrowerID)
	ret0, _ := ret[0].(*borrower.Borrower)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBorrower indicates an expected call of GetBorrower.
func (mr *MockRepoLoanInterfaceMockRecorder) GetBorrower(ctx, borrowerID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBorrower", reflect.TypeOf((*MockRepoLoanInterface)(nil).GetBorrower), ctx, borrowerID)
}

// GetInvestor mocks base method.
func (m *MockRepoLoanInterface) GetInvestor(ctx context.Context, investorID int64) (*investor.Investor, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInvestor", ctx, investorID)
	ret0, _ := ret[0].(*investor.Investor)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInvestor indicates an expected call of GetInvestor.
func (mr *MockRepoLoanInterfaceMockRecorder) GetInvestor(ctx, investorID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInvestor", reflect.TypeOf((*MockRepoLoanInterface)(nil).GetInvestor), ctx, investorID)
}

// GetLoan mocks base method.
func (m *MockRepoLoanInterface) GetLoan(ctx context.Context, loanID int64) (*loan.Loan, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLoan", ctx, loanID)
	ret0, _ := ret[0].(*loan.Loan)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLoan indicates an expected call of GetLoan.
func (mr *MockRepoLoanInterfaceMockRecorder) GetLoan(ctx, loanID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLoan", reflect.TypeOf((*MockRepoLoanInterface)(nil).GetLoan), ctx, loanID)
}

// GetLoanDetail mocks base method.
func (m *MockRepoLoanInterface) GetLoanDetail(ctx context.Context, loanID int64) ([]*loan.LoanDetail, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLoanDetail", ctx, loanID)
	ret0, _ := ret[0].([]*loan.LoanDetail)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLoanDetail indicates an expected call of GetLoanDetail.
func (mr *MockRepoLoanInterfaceMockRecorder) GetLoanDetail(ctx, loanID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLoanDetail", reflect.TypeOf((*MockRepoLoanInterface)(nil).GetLoanDetail), ctx, loanID)
}

// InsertLoan mocks base method.
func (m *MockRepoLoanInterface) InsertLoan(ctx context.Context, loan *loan.Loan) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertLoan", ctx, loan)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InsertLoan indicates an expected call of InsertLoan.
func (mr *MockRepoLoanInterfaceMockRecorder) InsertLoan(ctx, loan interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertLoan", reflect.TypeOf((*MockRepoLoanInterface)(nil).InsertLoan), ctx, loan)
}

// InsertLoanDetail mocks base method.
func (m *MockRepoLoanInterface) InsertLoanDetail(ctx context.Context, loanDetail *loan.LoanDetail) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertLoanDetail", ctx, loanDetail)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertLoanDetail indicates an expected call of InsertLoanDetail.
func (mr *MockRepoLoanInterfaceMockRecorder) InsertLoanDetail(ctx, loanDetail interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertLoanDetail", reflect.TypeOf((*MockRepoLoanInterface)(nil).InsertLoanDetail), ctx, loanDetail)
}

// UpdateApproval mocks base method.
func (m *MockRepoLoanInterface) UpdateApproval(ctx context.Context, loan *loan.Loan) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateApproval", ctx, loan)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateApproval indicates an expected call of UpdateApproval.
func (mr *MockRepoLoanInterfaceMockRecorder) UpdateApproval(ctx, loan interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateApproval", reflect.TypeOf((*MockRepoLoanInterface)(nil).UpdateApproval), ctx, loan)
}

// UpdateDisbursed mocks base method.
func (m *MockRepoLoanInterface) UpdateDisbursed(ctx context.Context, loan *loan.Loan) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateDisbursed", ctx, loan)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateDisbursed indicates an expected call of UpdateDisbursed.
func (mr *MockRepoLoanInterfaceMockRecorder) UpdateDisbursed(ctx, loan interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateDisbursed", reflect.TypeOf((*MockRepoLoanInterface)(nil).UpdateDisbursed), ctx, loan)
}

// UpdateInvested mocks base method.
func (m *MockRepoLoanInterface) UpdateInvested(ctx context.Context, loan *loan.Loan) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateInvested", ctx, loan)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateInvested indicates an expected call of UpdateInvested.
func (mr *MockRepoLoanInterfaceMockRecorder) UpdateInvested(ctx, loan interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateInvested", reflect.TypeOf((*MockRepoLoanInterface)(nil).UpdateInvested), ctx, loan)
}

// MockRepoUploadInterface is a mock of RepoUploadInterface interface.
type MockRepoUploadInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRepoUploadInterfaceMockRecorder
}

// MockRepoUploadInterfaceMockRecorder is the mock recorder for MockRepoUploadInterface.
type MockRepoUploadInterfaceMockRecorder struct {
	mock *MockRepoUploadInterface
}

// NewMockRepoUploadInterface creates a new mock instance.
func NewMockRepoUploadInterface(ctrl *gomock.Controller) *MockRepoUploadInterface {
	mock := &MockRepoUploadInterface{ctrl: ctrl}
	mock.recorder = &MockRepoUploadInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepoUploadInterface) EXPECT() *MockRepoUploadInterfaceMockRecorder {
	return m.recorder
}

// UploadFile mocks base method.
func (m *MockRepoUploadInterface) UploadFile(ctx context.Context, file []byte, path string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadFile", ctx, file, path)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UploadFile indicates an expected call of UploadFile.
func (mr *MockRepoUploadInterfaceMockRecorder) UploadFile(ctx, file, path interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadFile", reflect.TypeOf((*MockRepoUploadInterface)(nil).UploadFile), ctx, file, path)
}

// MockRepoNotificationInterface is a mock of RepoNotificationInterface interface.
type MockRepoNotificationInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRepoNotificationInterfaceMockRecorder
}

// MockRepoNotificationInterfaceMockRecorder is the mock recorder for MockRepoNotificationInterface.
type MockRepoNotificationInterfaceMockRecorder struct {
	mock *MockRepoNotificationInterface
}

// NewMockRepoNotificationInterface creates a new mock instance.
func NewMockRepoNotificationInterface(ctrl *gomock.Controller) *MockRepoNotificationInterface {
	mock := &MockRepoNotificationInterface{ctrl: ctrl}
	mock.recorder = &MockRepoNotificationInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepoNotificationInterface) EXPECT() *MockRepoNotificationInterfaceMockRecorder {
	return m.recorder
}

// SendEmail mocks base method.
func (m *MockRepoNotificationInterface) SendEmail(email, subject, message string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendEmail", email, subject, message)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendEmail indicates an expected call of SendEmail.
func (mr *MockRepoNotificationInterfaceMockRecorder) SendEmail(email, subject, message interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendEmail", reflect.TypeOf((*MockRepoNotificationInterface)(nil).SendEmail), email, subject, message)
}
